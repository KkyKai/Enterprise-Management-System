# models.py
import sqlalchemy
from .database import metadata

# Note: In PostgreSQL, INT PRIMARY KEY AUTO_INCREMENT is typically defined as SERIAL or
# GENERATED BY DEFAULT AS IDENTITY. SQLAlchemy handles this abstraction.

# Lookup Tables
Ranks = sqlalchemy.Table("ranks", metadata, sqlalchemy.Column("rank_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("rank_name", sqlalchemy.String, nullable=False, unique=True))
Vocations = sqlalchemy.Table("vocations", metadata, sqlalchemy.Column("vocation_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("vocation_name", sqlalchemy.String, nullable=False, unique=True))
Appointments = sqlalchemy.Table("appointments", metadata, sqlalchemy.Column("appointment_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("appointment_name", sqlalchemy.String, nullable=False, unique=True))
Suppliers = sqlalchemy.Table("suppliers", metadata, sqlalchemy.Column("supplier_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("supplier_name", sqlalchemy.String, nullable=False, unique=True))
Baskets = sqlalchemy.Table("baskets", metadata, sqlalchemy.Column("basket_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("basket_name", sqlalchemy.String, nullable=False, unique=True))
Countries = sqlalchemy.Table("countries", metadata, sqlalchemy.Column("country_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("country_name", sqlalchemy.String, nullable=False, unique=True))
Course_Statuses = sqlalchemy.Table("course_statuses", metadata, sqlalchemy.Column("status_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("status_name", sqlalchemy.String, nullable=False, unique=True))
Modality = sqlalchemy.Table("modality", metadata, sqlalchemy.Column("modality_id", sqlalchemy.Integer, primary_key=True), sqlalchemy.Column("modality_name", sqlalchemy.String, nullable=False, unique=True))

# Core Data Tables
Course = sqlalchemy.Table("course", metadata,
    sqlalchemy.Column("course_id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("course_title", sqlalchemy.String, nullable=False),
    sqlalchemy.Column("supplier_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("suppliers.supplier_id")),
    sqlalchemy.Column("basket_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("baskets.basket_id")),
    sqlalchemy.Column("country_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("countries.country_id")),
)

Personnel = sqlalchemy.Table("personnel", metadata,
    sqlalchemy.Column("personnel_id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("name", sqlalchemy.String, nullable=False),
    sqlalchemy.Column("current_rank_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("ranks.rank_id")),
    sqlalchemy.Column("current_vocation_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("vocations.vocation_id")),
    sqlalchemy.Column("current_appointment_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("appointments.appointment_id")),
)

Course_Modality_Schedule = sqlalchemy.Table("course_modality_schedule", metadata,
    sqlalchemy.Column("schedule_id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("course_id", sqlalchemy.Integer, nullable=False),
    sqlalchemy.Column("modality_id", sqlalchemy.Integer, nullable=False),
    sqlalchemy.Column("course_available_start_date", sqlalchemy.Date, nullable=False),
    sqlalchemy.Column("course_available_end_date", sqlalchemy.Date, nullable=False),
    sqlalchemy.ForeignKeyConstraint(
        ["course_id", "modality_id"],
        ["course_modality_junction.course_id", "course_modality_junction.modality_id"]
    )
)

# Junction & Tracking Tables
Course_Modality_Junction = sqlalchemy.Table("course_modality_junction", metadata,
    sqlalchemy.Column("course_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("course.course_id"), primary_key=True),
    sqlalchemy.Column("modality_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("modality.modality_id"), primary_key=True),
)

Personnel_Tracking_Achievements = sqlalchemy.Table("personnel_tracking_achievements", metadata,
    sqlalchemy.Column("achievement_tracking_id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("personnel_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("personnel.personnel_id")),
    sqlalchemy.Column("achievements", sqlalchemy.Text, nullable=False),
    sqlalchemy.Column("conferred_date", sqlalchemy.Date, nullable=False),
)

Personnel_Tracking_Appointment = sqlalchemy.Table("personnel_tracking_appointment", metadata,
    sqlalchemy.Column("appointment_tracking_id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("personnel_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("personnel.personnel_id")),
    sqlalchemy.Column("appointment_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("appointments.appointment_id")),
    sqlalchemy.Column("conferred_date", sqlalchemy.Date, nullable=False),
)

Personnel_Tracking_Rank_History = sqlalchemy.Table("personnel_tracking_rank_history", metadata,
    sqlalchemy.Column("rank_history_id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("personnel_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("personnel.personnel_id")),
    sqlalchemy.Column("rank_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("ranks.rank_id")),
    sqlalchemy.Column("start_date", sqlalchemy.Date, nullable=False),
    sqlalchemy.Column("end_date", sqlalchemy.Date),
)

Personnel_Course_History = sqlalchemy.Table("personnel_course_history", metadata,
    sqlalchemy.Column("enrollment_id", sqlalchemy.Integer, primary_key=True),
    sqlalchemy.Column("personnel_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("personnel.personnel_id")),
    sqlalchemy.Column("schedule_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("course_modality_schedule.schedule_id")),
    sqlalchemy.Column("status_id", sqlalchemy.Integer, sqlalchemy.ForeignKey("course_statuses.status_id")),
    sqlalchemy.Column("completion_date", sqlalchemy.Date),
)